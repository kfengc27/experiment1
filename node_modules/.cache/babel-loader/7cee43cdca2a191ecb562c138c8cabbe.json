{"ast":null,"code":"import { useMemo } from 'react';\n\nvar useBEM = function useBEM(_ref) {\n  var block = _ref.block,\n      element = _ref.element,\n      modifiers = _ref.modifiers,\n      className = _ref.className;\n  return useMemo(function () {\n    var blockElement = element ? block + \"__\" + element : block;\n    var classString = blockElement;\n    modifiers && Object.keys(modifiers).forEach(function (name) {\n      var value = modifiers[name];\n      if (value) classString += \" \" + blockElement + \"--\" + (value === true ? name : name + \"-\" + value);\n    });\n    var expandedClassName = typeof className === 'function' ? className(modifiers) : className;\n\n    if (typeof expandedClassName === 'string') {\n      expandedClassName = expandedClassName.trim();\n      if (expandedClassName) classString += \" \" + expandedClassName;\n    }\n\n    return classString;\n  }, [block, element, modifiers, className]);\n};\n\nexport { useBEM };","map":{"version":3,"names":["useMemo","useBEM","_ref","block","element","modifiers","className","blockElement","classString","Object","keys","forEach","name","value","expandedClassName","trim"],"sources":["/Users/chengbinfeng/Developer/experiment1/node_modules/@szhsin/react-menu/dist/es/hooks/useBEM.js"],"sourcesContent":["import { useMemo } from 'react';\n\nvar useBEM = function useBEM(_ref) {\n  var block = _ref.block,\n      element = _ref.element,\n      modifiers = _ref.modifiers,\n      className = _ref.className;\n  return useMemo(function () {\n    var blockElement = element ? block + \"__\" + element : block;\n    var classString = blockElement;\n    modifiers && Object.keys(modifiers).forEach(function (name) {\n      var value = modifiers[name];\n      if (value) classString += \" \" + blockElement + \"--\" + (value === true ? name : name + \"-\" + value);\n    });\n    var expandedClassName = typeof className === 'function' ? className(modifiers) : className;\n\n    if (typeof expandedClassName === 'string') {\n      expandedClassName = expandedClassName.trim();\n      if (expandedClassName) classString += \" \" + expandedClassName;\n    }\n\n    return classString;\n  }, [block, element, modifiers, className]);\n};\n\nexport { useBEM };\n"],"mappings":"AAAA,SAASA,OAAT,QAAwB,OAAxB;;AAEA,IAAIC,MAAM,GAAG,SAASA,MAAT,CAAgBC,IAAhB,EAAsB;EACjC,IAAIC,KAAK,GAAGD,IAAI,CAACC,KAAjB;EAAA,IACIC,OAAO,GAAGF,IAAI,CAACE,OADnB;EAAA,IAEIC,SAAS,GAAGH,IAAI,CAACG,SAFrB;EAAA,IAGIC,SAAS,GAAGJ,IAAI,CAACI,SAHrB;EAIA,OAAON,OAAO,CAAC,YAAY;IACzB,IAAIO,YAAY,GAAGH,OAAO,GAAGD,KAAK,GAAG,IAAR,GAAeC,OAAlB,GAA4BD,KAAtD;IACA,IAAIK,WAAW,GAAGD,YAAlB;IACAF,SAAS,IAAII,MAAM,CAACC,IAAP,CAAYL,SAAZ,EAAuBM,OAAvB,CAA+B,UAAUC,IAAV,EAAgB;MAC1D,IAAIC,KAAK,GAAGR,SAAS,CAACO,IAAD,CAArB;MACA,IAAIC,KAAJ,EAAWL,WAAW,IAAI,MAAMD,YAAN,GAAqB,IAArB,IAA6BM,KAAK,KAAK,IAAV,GAAiBD,IAAjB,GAAwBA,IAAI,GAAG,GAAP,GAAaC,KAAlE,CAAf;IACZ,CAHY,CAAb;IAIA,IAAIC,iBAAiB,GAAG,OAAOR,SAAP,KAAqB,UAArB,GAAkCA,SAAS,CAACD,SAAD,CAA3C,GAAyDC,SAAjF;;IAEA,IAAI,OAAOQ,iBAAP,KAA6B,QAAjC,EAA2C;MACzCA,iBAAiB,GAAGA,iBAAiB,CAACC,IAAlB,EAApB;MACA,IAAID,iBAAJ,EAAuBN,WAAW,IAAI,MAAMM,iBAArB;IACxB;;IAED,OAAON,WAAP;EACD,CAfa,EAeX,CAACL,KAAD,EAAQC,OAAR,EAAiBC,SAAjB,EAA4BC,SAA5B,CAfW,CAAd;AAgBD,CArBD;;AAuBA,SAASL,MAAT"},"metadata":{},"sourceType":"module"}