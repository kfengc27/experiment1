{"ast":null,"code":"import { useMemo } from 'react';\n\nfunction setRef(ref, instance) {\n  typeof ref === 'function' ? ref(instance) : ref.current = instance;\n}\n\nvar useCombinedRef = function useCombinedRef(refA, refB) {\n  return useMemo(function () {\n    if (!refA) return refB;\n    if (!refB) return refA;\n    return function (instance) {\n      setRef(refA, instance);\n      setRef(refB, instance);\n    };\n  }, [refA, refB]);\n};\n\nexport { useCombinedRef };","map":{"version":3,"names":["useMemo","setRef","ref","instance","current","useCombinedRef","refA","refB"],"sources":["/Users/chengbinfeng/Developer/experiment1/node_modules/@szhsin/react-menu/dist/es/hooks/useCombinedRef.js"],"sourcesContent":["import { useMemo } from 'react';\n\nfunction setRef(ref, instance) {\n  typeof ref === 'function' ? ref(instance) : ref.current = instance;\n}\n\nvar useCombinedRef = function useCombinedRef(refA, refB) {\n  return useMemo(function () {\n    if (!refA) return refB;\n    if (!refB) return refA;\n    return function (instance) {\n      setRef(refA, instance);\n      setRef(refB, instance);\n    };\n  }, [refA, refB]);\n};\n\nexport { useCombinedRef };\n"],"mappings":"AAAA,SAASA,OAAT,QAAwB,OAAxB;;AAEA,SAASC,MAAT,CAAgBC,GAAhB,EAAqBC,QAArB,EAA+B;EAC7B,OAAOD,GAAP,KAAe,UAAf,GAA4BA,GAAG,CAACC,QAAD,CAA/B,GAA4CD,GAAG,CAACE,OAAJ,GAAcD,QAA1D;AACD;;AAED,IAAIE,cAAc,GAAG,SAASA,cAAT,CAAwBC,IAAxB,EAA8BC,IAA9B,EAAoC;EACvD,OAAOP,OAAO,CAAC,YAAY;IACzB,IAAI,CAACM,IAAL,EAAW,OAAOC,IAAP;IACX,IAAI,CAACA,IAAL,EAAW,OAAOD,IAAP;IACX,OAAO,UAAUH,QAAV,EAAoB;MACzBF,MAAM,CAACK,IAAD,EAAOH,QAAP,CAAN;MACAF,MAAM,CAACM,IAAD,EAAOJ,QAAP,CAAN;IACD,CAHD;EAID,CAPa,EAOX,CAACG,IAAD,EAAOC,IAAP,CAPW,CAAd;AAQD,CATD;;AAWA,SAASF,cAAT"},"metadata":{},"sourceType":"module"}